
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id 'org.springframework.boot' version '2.7.2'
}
apply plugin: 'java'
springBoot {
    mainClass = 'acambieri.sanbernardo.gestionegare.GestionegareApplication'
}


group = 'acambieri.sanbernardo'
version = '1.4'

description = """gestionegare"""

sourceCompatibility = 17
targetCompatibility = 17


tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task buildFrontend(type: Exec) {
    workingDir '../frontend'
    commandLine 'npm','run',"package"
}




repositories {

     maven { url "https://repo.spring.io/snapshot" }
     maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo1.maven.org/maven2/" }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.10'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.springframework:spring-context-support:5.3.22'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // JAX-B dependencies for JDK 9+
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.7.2'
    testCompileOnly('org.springframework.boot:spring-boot-starter-test:2.7.2') {
        exclude(module: 'commons-logging')
    }
    testCompileOnly('org.springframework.security:spring-security-test:5.7.2')
}


processResources{
    if (gradle.startParameter.taskNames.contains("assemble")) {
        dependsOn "buildFrontend"
    }
    else{
        println "skipping frontend build"
    }
}